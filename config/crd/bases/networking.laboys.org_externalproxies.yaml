---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: externalproxies.networking.laboys.org
spec:
  group: networking.laboys.org
  names:
    kind: ExternalProxy
    listKind: ExternalProxyList
    plural: externalproxies
    singular: externalproxy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.ready
      name: Ready
      type: boolean
    - jsonPath: .status.serviceName
      name: Service
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ExternalProxy is the Schema for the externalproxies API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ExternalProxySpec defines the desired state of ExternalProxy
            properties:
              backends:
                items:
                  properties:
                    addresses:
                      items:
                        description: EndpointAddress is a tuple that describes single
                          IP address.
                        properties:
                          hostname:
                            description: The Hostname of this endpoint
                            type: string
                          ip:
                            description: |-
                              The IP of this endpoint.
                              May not be loopback (127.0.0.0/8 or ::1), link-local (169.254.0.0/16 or fe80::/10),
                              or link-local multicast (224.0.0.0/24 or ff02::/16).
                            type: string
                          nodeName:
                            description: 'Optional: Node hosting this endpoint. This
                              can be used to determine endpoints local to a node.'
                            type: string
                          targetRef:
                            description: Reference to object providing the endpoint.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              fieldPath:
                                description: |-
                                  If referring to a piece of an object instead of an entire object, this string
                                  should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                  For example, if the object reference is to a container within a pod, this would take on a value like:
                                  "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                  the event) or if no container name is specified "spec.containers[2]" (container with
                                  index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                  referencing a part of an object.
                                  TODO: this design is not final and this field is subject to change in the future.
                                type: string
                              kind:
                                description: |-
                                  Kind of the referent.
                                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                type: string
                              name:
                                description: |-
                                  Name of the referent.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              namespace:
                                description: |-
                                  Namespace of the referent.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                type: string
                              resourceVersion:
                                description: |-
                                  Specific resourceVersion to which this reference is made, if any.
                                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                                type: string
                              uid:
                                description: |-
                                  UID of the referent.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                        required:
                        - ip
                        type: object
                        x-kubernetes-map-type: atomic
                      type: array
                    ports:
                      items:
                        description: EndpointPort is a tuple that describes a single
                          port.
                        properties:
                          appProtocol:
                            description: |-
                              The application protocol for this port.
                              This is used as a hint for implementations to offer richer behavior for protocols that they understand.
                              This field follows standard Kubernetes label syntax.
                              Valid values are either:


                              * Un-prefixed protocol names - reserved for IANA standard service names (as per
                              RFC-6335 and https://www.iana.org/assignments/service-names).


                              * Kubernetes-defined prefixed names:
                                * 'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-
                                * 'kubernetes.io/ws'  - WebSocket over cleartext as described in https://www.rfc-editor.org/rfc/rfc6455
                                * 'kubernetes.io/wss' - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455


                              * Other protocols should use implementation-defined prefixed names such as
                              mycompany.com/my-custom-protocol.
                            type: string
                          name:
                            description: |-
                              The name of this port.  This must match the 'name' field in the
                              corresponding ServicePort.
                              Must be a DNS_LABEL.
                              Optional only if one port is defined.
                            type: string
                          port:
                            description: The port number of the endpoint.
                            format: int32
                            type: integer
                          protocol:
                            default: TCP
                            description: |-
                              The IP protocol for this port.
                              Must be UDP, TCP, or SCTP.
                              Default is TCP.
                            type: string
                        required:
                        - port
                        type: object
                        x-kubernetes-map-type: atomic
                      type: array
                  required:
                  - addresses
                  - ports
                  type: object
                type: array
              ingress:
                properties:
                  defaultBackend:
                    description: |-
                      defaultBackend is the backend that should handle requests that don't
                      match any rule. If Rules are not specified, DefaultBackend must be specified.
                      If DefaultBackend is not set, the handling of requests that do not match any
                      of the rules will be up to the Ingress controller.
                    properties:
                      port:
                        description: |-
                          port of the referenced service. A port name or port number
                          is required for a ExternalProxyServiceBackendPort.
                        properties:
                          name:
                            description: |-
                              name is the name of the port on the Service.
                              This is a mutually exclusive setting with "Number".
                            type: string
                          number:
                            description: |-
                              number is the numerical port number (e.g. 80) on the Service.
                              This is a mutually exclusive setting with "Name".
                            format: int32
                            type: integer
                        type: object
                    type: object
                  ingressClassName:
                    description: ingressClassName is the name of an IngressClass cluster
                      resource.
                    type: string
                  metadata:
                    description: Standard object's metadata.
                    x-kubernetes-preserve-unknown-fields: true
                  rules:
                    description: |-
                      rules is a list of host rules used to configure the Ingress. If unspecified,
                      or no rule matches, all traffic is sent to the default backend.
                    items:
                      description: |-
                        ExternalProxyIngressRule represents the rules mapping the paths under a specified
                        host to the related backend services. Incoming requests are first evaluated for a
                        host match, then routed to the backend associated with the matching IngressRuleValue.
                      properties:
                        host:
                          description: |-
                            host is the fully qualified domain name of a network host, as defined by RFC 3986.


                            Incoming requests are matched against the host before the IngressRuleValue. If the
                            host is unspecified, the Ingress routes all traffic based on the specified IngressRuleValue.
                          type: string
                        http:
                          description: |-
                            http represents a rule to route requests for this ExternalProxyIngressRule.


                            If unspecified, the rule defaults to a http catch-all. Whether that sends
                            just traffic matching the host to the default backend or all traffic to the
                            default backend, is left to the controller fulfilling the Ingress.
                          properties:
                            paths:
                              description: paths is a collection of paths that map
                                requests to backends.
                              items:
                                description: |-
                                  ExternalProxyIngressHttpPath associates a path with a backend. Incoming urls matching
                                  the path are forwarded to the backend.
                                properties:
                                  backend:
                                    description: |-
                                      backend defines the referenced service endpoint to which the traffic
                                      will be forwarded to.
                                    properties:
                                      port:
                                        description: |-
                                          port of the referenced service. A port name or port number
                                          is required for a ExternalProxyServiceBackendPort.
                                        properties:
                                          name:
                                            description: |-
                                              name is the name of the port on the Service.
                                              This is a mutually exclusive setting with "Number".
                                            type: string
                                          number:
                                            description: |-
                                              number is the numerical port number (e.g. 80) on the Service.
                                              This is a mutually exclusive setting with "Name".
                                            format: int32
                                            type: integer
                                        type: object
                                    type: object
                                  path:
                                    description: |-
                                      path is matched against the path of an incoming request. Currently, it can
                                      contain characters disallowed from the conventional "path" part of a URL
                                      as defined by RFC 3986. Paths must begin with a '/' and must be present
                                      when using PathType with value "Exact" or "Prefix".
                                    type: string
                                  pathType:
                                    description: pathType determines the interpretation
                                      of the path matching.
                                    type: string
                                required:
                                - pathType
                                type: object
                              type: array
                          required:
                          - paths
                          type: object
                      type: object
                    type: array
                  tls:
                    description: |-
                      tls represents the TLS configuration. Currently, the Ingress only supports a
                      single TLS port, 443. If multiple members of this list specify different hosts,
                      they will be multiplexed on the same port according to the hostname specified
                      through the SNI TLS extension, if the ingress controller fulfilling the
                      ingress supports SNI.
                    items:
                      description: IngressTLS describes the transport layer security
                        associated with an ingress.
                      properties:
                        hosts:
                          description: |-
                            hosts is a list of hosts included in the TLS certificate. The values in
                            this list must match the name/s used in the tlsSecret. Defaults to the
                            wildcard host setting for the loadbalancer controller fulfilling this
                            Ingress, if left unspecified.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        secretName:
                          description: |-
                            secretName is the name of the secret used to terminate TLS traffic on
                            port 443. Field is left optional to allow TLS routing based on SNI
                            hostname alone. If the SNI host in a listener conflicts with the "Host"
                            header field used by an IngressRule, the SNI host is used for termination
                            and value of the "Host" header is used for routing.
                          type: string
                      type: object
                    type: array
                type: object
              service:
                properties:
                  metadata:
                    description: Standard object's metadata.
                    x-kubernetes-preserve-unknown-fields: true
                  name:
                    description: The name of the Service, if empty the name of the
                      ExternalProxy is used.
                    type: string
                  ports:
                    description: The list of ports that are exposed by this service.
                    items:
                      description: ServicePort contains information on service's port.
                      properties:
                        appProtocol:
                          description: |-
                            The application protocol for this port.
                            This is used as a hint for implementations to offer richer behavior for protocols that they understand.
                            This field follows standard Kubernetes label syntax.
                            Valid values are either:


                            * Un-prefixed protocol names - reserved for IANA standard service names (as per
                            RFC-6335 and https://www.iana.org/assignments/service-names).


                            * Kubernetes-defined prefixed names:
                              * 'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-
                              * 'kubernetes.io/ws'  - WebSocket over cleartext as described in https://www.rfc-editor.org/rfc/rfc6455
                              * 'kubernetes.io/wss' - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455


                            * Other protocols should use implementation-defined prefixed names such as
                            mycompany.com/my-custom-protocol.
                          type: string
                        name:
                          description: |-
                            The name of this port within the service. This must be a DNS_LABEL.
                            All ports within a ServiceSpec must have unique names. When considering
                            the endpoints for a Service, this must match the 'name' field in the
                            EndpointPort.
                            Optional if only one ServicePort is defined on this service.
                          type: string
                        nodePort:
                          description: |-
                            The port on each node on which this service is exposed when type is
                            NodePort or LoadBalancer.  Usually assigned by the system. If a value is
                            specified, in-range, and not in use it will be used, otherwise the
                            operation will fail.  If not specified, a port will be allocated if this
                            Service requires one.  If this field is specified when creating a
                            Service which does not need it, creation will fail. This field will be
                            wiped when updating a Service to no longer need it (e.g. changing type
                            from NodePort to ClusterIP).
                            More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                          format: int32
                          type: integer
                        port:
                          description: The port that will be exposed by this service.
                          format: int32
                          type: integer
                        protocol:
                          default: TCP
                          description: |-
                            The IP protocol for this port. Supports "TCP", "UDP", and "SCTP".
                            Default is TCP.
                          type: string
                        targetPort:
                          anyOf:
                          - type: integer
                          - type: string
                          description: |-
                            Number or name of the port to access on the pods targeted by the service.
                            Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                            If this is a string, it will be looked up as a named port in the
                            target Pod's container ports. If this is not specified, the value
                            of the 'port' field is used (an identity map).
                            This field is ignored for services with clusterIP=None, and should be
                            omitted or set equal to the 'port' field.
                            More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
                          x-kubernetes-int-or-string: true
                      required:
                      - port
                      type: object
                    type: array
                  type:
                    description: type determines how the Service is exposed. Defaults
                      to ClusterIP.
                    type: string
                required:
                - ports
                - type
                type: object
            required:
            - backends
            type: object
          status:
            description: ExternalProxyStatus defines the observed state of ExternalProxy
            properties:
              observedGeneration:
                format: int64
                type: integer
              ready:
                type: boolean
              serviceName:
                type: string
            required:
            - observedGeneration
            - ready
            - serviceName
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
